
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/*
     *987/    '<>=|
    3210.    z.,'-
    +654-    .{}/\

    *#%@/    "[]KJ
    ?!().    Z:;"_
    +6$&-    .^~`\
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    cstar:  star_none        { compatible = "zmk,behavior-mod-morph"; label = "STAR_BLANK";        #binding-cells = <0>; bindings = <&kp STAR>,      <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };
    c9:     n9_hash          { compatible = "zmk,behavior-mod-morph"; label = "N9_HASH";           #binding-cells = <0>; bindings = <&kp N9>,        <&kp HASH>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    c8:     n8_pct           { compatible = "zmk,behavior-mod-morph"; label = "N8_PERCENT";        #binding-cells = <0>; bindings = <&kp N8>,        <&kp PRCNT>;  mods = <(MOD_LSFT|MOD_RSFT)>; };
    c7:     n7_at            { compatible = "zmk,behavior-mod-morph"; label = "N7_AT";             #binding-cells = <0>; bindings = <&kp N7>,        <&kp AT>;     mods = <(MOD_LSFT|MOD_RSFT)>; };
    cslash: slash_none       { compatible = "zmk,behavior-mod-morph"; label = "SLASH_BLANK";       #binding-cells = <0>; bindings = <&kp SLASH>,     <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };

    c3:     n3_qmark         { compatible = "zmk,behavior-mod-morph"; label = "N3_QMARK";          #binding-cells = <0>; bindings = <&kp N3>,        <&kp QMARK>;  mods = <(MOD_LSFT|MOD_RSFT)>; };
    c2:     n2_excl          { compatible = "zmk,behavior-mod-morph"; label = "N2_EXCL";           #binding-cells = <0>; bindings = <&kp N2>,        <&kp EXCL>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    c1:     n1_lpar          { compatible = "zmk,behavior-mod-morph"; label = "N1_LPAR";           #binding-cells = <0>; bindings = <&kp N1>,        <&kp LPAR>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    c0:     n0_rpar          { compatible = "zmk,behavior-mod-morph"; label = "N0_LPAR";           #binding-cells = <0>; bindings = <&kp N1>,        <&kp LPAR>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    cdot:   dot_none         { compatible = "zmk,behavior-mod-morph"; label = "DOT_BLANK";         #binding-cells = <0>; bindings = <&kp DOT>,       <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };

    cplus:  plus_none        { compatible = "zmk,behavior-mod-morph"; label = "PLUS_BLANK";        #binding-cells = <0>; bindings = <&kp PLUS>,      <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };
    c6:     n6_none          { compatible = "zmk,behavior-mod-morph"; label = "N6_BLANK";          #binding-cells = <0>; bindings = <&kp N6>,        <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };
    c5:     n5_dllr          { compatible = "zmk,behavior-mod-morph"; label = "N5_DLLR";           #binding-cells = <0>; bindings = <&kp N5>,        <&kp DLLR>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    c4:     n4_amps          { compatible = "zmk,behavior-mod-morph"; label = "N4_AMPS";           #binding-cells = <0>; bindings = <&kp N4>,        <&kp AMPS>;   mods = <(MOD_LSFT|MOD_RSFT)>; };
    cminus: minus_none       { compatible = "zmk,behavior-mod-morph"; label = "MINUS_BLANK";       #binding-cells = <0>; bindings = <&kp MINUS>,     <&none>;      mods = <(MOD_LSFT|MOD_RSFT)>; };
  };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp LGUI  &kp N1  &kp N2    &kp N3     &kp N4     &kp N5            &none      &none     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0   &none
  &kp TAB   &kp Q   &kp G     &kp M      &kp U    &kp DOT            &none      &none    &kp SQT      &kp R      &kp D      &kp K     &kp J   &none
  &kp ESC   &kp A   &kp O     &kp E      &kp I      &kp X            &none  &kp LCTRL   &kp LALT                        &kp RCTRL  &kp RALT   &none     &kp Z   &kp H   &kp T   &kp N   &kp S  &kp ENTER
  &kp DEL   &kp V   &kp F     &kp W      &kp Y  &kp COMMA            &none      &none  &kp LSHFT      &none      &none  &kp PG_UP     &none   &none  &kp SEMI   &kp L   &kp C   &kp P   &kp B      &none
    &mo 2   &none   &none  &kp LEFT  &kp RIGHT   &kp BSPC            &mo 1      &none  &kp PG_DN  &kp RSHFT  &kp SPACE     &kp UP  &kp DOWN   &none     &none   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans    &kp F1  &kp F2    &kp F3   &kp F4     &kp F5            &kp F11  &kp F12  &kp F6  &kp F7  &kp F8     &kp F9    &kp F10  &trans
 &trans  &kp STAR  &kp N9    &kp N8   &kp N7  &kp SLASH             &trans   &trans   &none  &kp LT  &kp GT  &kp EQUAL   &kp PIPE  &trans
 &trans    &kp N3  &kp N2    &kp N1   &kp N0    &kp DOT             &trans   &trans  &trans                     &trans     &trans  &trans   &none   &kp DOT  &kp COMMA    &kp SQT  &kp MINUS  &trans
 &trans  &cplus    &c6       &c5      &c4       &cminus              &none    &none  &trans   &none   &none     &trans      &none   &none   &none  &kp LBRC   &kp RBRC  &kp SLASH   &kp BSLH  &trans
 &trans    &trans  &trans  &kp HOME  &kp END     &trans             &trans   &trans  &trans  &trans  &trans  &kp PG_UP  &kp PG_DN  &trans  &trans     &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
